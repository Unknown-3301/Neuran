using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Neuran.Optimizers
{
    internal static class SGDShaders
    {
        /*
        #pragma kernel CSMain

        RWStructuredBuffer<float> Parameters : register(u0);
        RWStructuredBuffer<float> Derivatives : register(u1);

        cbuffer Info : register(b0)
        {
            int Length;
    
            int dummy1;
            int dummy2;
            float LearningRate;
        }

        [numthreads(16, 1, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Length)
            {
                return;
            }
    
            float v = Parameters[id.x];
            Parameters[id.x] = v - LearningRate * Derivatives[id.x];
        }*/
        public static byte[] SGD1 = new byte[]
        { 
        68, 88, 66, 67, 139, 0, 3, 31, 92, 217, 74, 247, 190, 251, 125, 201, 150, 88, 13, 219, 1, 0, 0, 0
                    , 236, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 252, 2, 0, 0, 12, 3, 0, 0, 28, 3, 0
                    , 0, 80, 4, 0, 0, 82, 68, 69, 70, 192, 2, 0, 0, 3, 0, 0, 0, 184, 0, 0, 0, 3, 0
                    , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 152, 2, 0, 0, 82, 68, 49, 49, 60
                    , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
                    , 0, 0, 0, 0, 156, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
                    , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 167, 0, 0, 0, 6, 0, 0, 0, 6, 0
                    , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 179
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 1, 0, 0, 0, 1, 0, 0, 0, 80, 97, 114, 97, 109, 101, 116, 101, 114, 115, 0, 68, 101, 114, 105
                    , 118, 97, 116, 105, 118, 101, 115, 0, 73, 110, 102, 111, 0, 179, 0, 0, 0, 4, 0, 0, 0, 0, 1
                    , 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 1, 0, 0, 0, 24
                    , 2, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 167, 0, 0, 0, 1, 0, 0, 0
                    , 112, 2, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 160, 1, 0, 0, 0, 0, 0
                    , 0, 4, 0, 0, 0, 2, 0, 0, 0, 172, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
                    , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 208, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0
                    , 0, 0, 0, 172, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
                    , 0, 0, 0, 0, 215, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 172, 1, 0
                    , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 222, 1
                    , 0, 0, 12, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 244, 1, 0, 0, 0, 0, 0, 0, 255
                    , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 76, 101, 110, 103, 116, 104, 0, 105
                    , 110, 116, 0, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167, 1, 0, 0, 100, 117, 109, 109, 121, 49
                    , 0, 100, 117, 109, 109, 121, 50, 0, 76, 101, 97, 114, 110, 105, 110, 103, 82, 97, 116, 101, 0, 102, 108
                    , 111, 97, 116, 0, 171, 171, 171, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 1, 0, 0, 64, 2, 0
                    , 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 76, 2, 0, 0, 0, 0, 0, 0, 255, 255
                    , 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0
                    , 171, 171, 171, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 1, 0, 0, 64, 2, 0, 0, 0, 0, 0
                    , 0, 4, 0, 0, 0, 2, 0, 0, 0, 76, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
                    , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41
                    , 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49
                    , 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71
                    , 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 44, 1, 0, 0, 80, 0
                    , 5, 0, 75, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1
                    , 0, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 4, 0, 0, 0, 158, 0, 0, 4
                    , 0, 224, 17, 0, 1, 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 18, 0, 2, 0, 104, 0, 0
                    , 2, 1, 0, 0, 0, 155, 0, 0, 4, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 80, 0
                    , 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1
                    , 167, 0, 0, 138, 2, 35, 0, 128, 131, 153, 25, 0, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2
                    , 0, 1, 64, 0, 0, 0, 0, 0, 0, 6, 224, 17, 0, 0, 0, 0, 0, 167, 0, 0, 138, 2, 35
                    , 0, 128, 131, 153, 25, 0, 34, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0
                    , 0, 0, 0, 6, 224, 17, 0, 1, 0, 0, 0, 50, 0, 0, 11, 18, 0, 16, 0, 0, 0, 0, 0
                    , 58, 128, 32, 128, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0
                    , 0, 10, 0, 16, 0, 0, 0, 0, 0, 168, 0, 0, 8, 18, 224, 17, 0, 0, 0, 0, 0, 10, 0
                    , 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83
                    , 84, 65, 84, 148, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
                    , 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Parameters : register(u0);
        RWTexture2D<float> Derivatives : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;
    
            int dummy2;
            float LearningRate;
        }

        [numthreads(8, 8, 1)]
                void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height)
            {
                return;
            }
    
            float v = Parameters[id.xy];
            Parameters[id.xy] = v - LearningRate * Derivatives[id.xy];
        }*/
        public static byte[] SGD2 = new byte[]
        { 
        68, 88, 66, 67, 24, 138, 87, 46, 254, 179, 187, 103, 73, 197, 17, 245, 166, 139, 145, 56, 1, 0, 0, 0
                    , 64, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 76, 2, 0, 0, 92, 2, 0, 0, 108, 2, 0
                    , 0, 164, 3, 0, 0, 82, 68, 69, 70, 16, 2, 0, 0, 1, 0, 0, 0, 184, 0, 0, 0, 3, 0
                    , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 232, 1, 0, 0, 82, 68, 49, 49, 60
                    , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
                    , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
                    , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 167, 0, 0, 0, 4, 0, 0, 0, 5, 0
                    , 0, 0, 4, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 179
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 1, 0, 0, 0, 1, 0, 0, 0, 80, 97, 114, 97, 109, 101, 116, 101, 114, 115, 0, 68, 101, 114, 105
                    , 118, 97, 116, 105, 118, 101, 115, 0, 73, 110, 102, 111, 0, 179, 0, 0, 0, 4, 0, 0, 0, 208, 0
                    , 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 4
                    , 0, 0, 0, 2, 0, 0, 0, 124, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
                    , 255, 255, 255, 255, 0, 0, 0, 0, 160, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0
                    , 0, 124, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
                    , 0, 0, 167, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 124, 1, 0, 0, 0
                    , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 174, 1, 0, 0
                    , 12, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 196, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255
                    , 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0
                    , 171, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 100
                    , 117, 109, 109, 121, 50, 0, 76, 101, 97, 114, 110, 105, 110, 103, 82, 97, 116, 101, 0, 102, 108, 111, 97
                    , 116, 0, 171, 171, 171, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 187, 1, 0, 0, 77, 105, 99, 114, 111
                    , 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111
                    , 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0
                    , 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72
                    , 69, 88, 48, 1, 0, 0, 80, 0, 5, 0, 76, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70
                    , 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0
                    , 85, 85, 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 1, 0, 0, 0, 85, 85, 0, 0, 95, 0, 0
                    , 2, 50, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0
                    , 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 50, 0, 16, 0, 0, 0, 0, 0, 70, 0, 2, 0, 70
                    , 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0
                    , 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16
                    , 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136, 194, 0, 0, 128, 67, 85
                    , 21, 0, 18, 0, 16, 0, 0, 0, 0, 0, 70, 5, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 163
                    , 0, 0, 136, 194, 0, 0, 128, 67, 85, 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 5, 2, 0
                    , 22, 238, 17, 0, 1, 0, 0, 0, 50, 0, 0, 11, 18, 0, 16, 0, 0, 0, 0, 0, 58, 128, 32
                    , 128, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0
                    , 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0, 0, 0, 0, 70, 5, 2, 0, 6
                    , 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 10, 0, 0, 0
                    , 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0
                    , 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Parameters : register(u0);
        RWTexture3D<float> Derivatives : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;
            int Depth;
    
            float LearningRate;
        }

        [numthreads(8, 8, 1)]
                void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height || id.z >= Depth)
            {
                return;
            }
    
            float v = Parameters[id];
            Parameters[id] = v - LearningRate * Derivatives[id];
        }*/
        public static byte[] SGD3 = new byte[]
        { 
        68, 88, 66, 67, 129, 129, 0, 190, 76, 172, 227, 168, 44, 117, 150, 189, 77, 222, 79, 84, 1, 0, 0, 0
                    , 88, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 72, 2, 0, 0, 88, 2, 0, 0, 104, 2, 0
                    , 0, 188, 3, 0, 0, 82, 68, 69, 70, 12, 2, 0, 0, 1, 0, 0, 0, 184, 0, 0, 0, 3, 0
                    , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 228, 1, 0, 0, 82, 68, 49, 49, 60
                    , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
                    , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
                    , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 167, 0, 0, 0, 4, 0, 0, 0, 5, 0
                    , 0, 0, 8, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 179
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 1, 0, 0, 0, 1, 0, 0, 0, 80, 97, 114, 97, 109, 101, 116, 101, 114, 115, 0, 68, 101, 114, 105
                    , 118, 97, 116, 105, 118, 101, 115, 0, 73, 110, 102, 111, 0, 179, 0, 0, 0, 4, 0, 0, 0, 208, 0
                    , 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 4
                    , 0, 0, 0, 2, 0, 0, 0, 124, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
                    , 255, 255, 255, 255, 0, 0, 0, 0, 160, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0
                    , 0, 124, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
                    , 0, 0, 167, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 124, 1, 0, 0, 0
                    , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 173, 1, 0, 0
                    , 12, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 192, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255
                    , 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0
                    , 171, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 68
                    , 101, 112, 116, 104, 0, 76, 101, 97, 114, 110, 105, 110, 103, 82, 97, 116, 101, 0, 102, 108, 111, 97, 116
                    , 0, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 186, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116
                    , 32, 40, 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108
                    , 101, 114, 32, 49, 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0
                    , 0, 79, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 76, 1
                    , 0, 0, 80, 0, 5, 0, 83, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0
                    , 0, 0, 0, 1, 0, 0, 0, 156, 40, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0
                    , 156, 40, 0, 4, 0, 224, 17, 0, 1, 0, 0, 0, 85, 85, 0, 0, 95, 0, 0, 2, 114, 0, 2
                    , 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0
                    , 0, 0, 80, 0, 0, 7, 114, 0, 16, 0, 0, 0, 0, 0, 70, 2, 2, 0, 70, 130, 32, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0
                    , 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0
                    , 0, 42, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0
                    , 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136, 66, 1, 0, 128, 67
                    , 85, 21, 0, 18, 0, 16, 0, 0, 0, 0, 0, 70, 10, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0
                    , 163, 0, 0, 136, 66, 1, 0, 128, 67, 85, 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 10, 2
                    , 0, 22, 238, 17, 0, 1, 0, 0, 0, 50, 0, 0, 11, 18, 0, 16, 0, 0, 0, 0, 0, 58, 128
                    , 32, 128, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10
                    , 0, 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0, 0, 0, 0, 70, 10, 2, 0
                    , 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 11, 0, 0
                    , 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0
                    , 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    , 0, 0, 0, 1, 0, 0, 0, };
    }
}
