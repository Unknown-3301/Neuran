using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Neuran.Utilities
{
    internal static class TensorsOperationShaders
    {
        /*
        #pragma kernel CSMain

        RWStructuredBuffer<float> Buffer1 : register(u0);
        RWStructuredBuffer<float> Buffer2 : register(u1);

        cbuffer Info : register(b0)
        {
            int Length;

            int dummy1;
            int dummy2;
            int dummy3;
        }

        [numthreads(16, 1, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Length)
            {
                return;
            }

            float val = Buffer1[id.x];
            Buffer1[id.x] = val + Buffer2[id.x];
        }

                */
        public static byte[] Add1 = new byte[]
        {
68, 88, 66, 67, 165, 63, 173, 165, 245, 16, 44, 6, 230, 5, 227, 92, 109, 231, 158, 190, 1, 0, 0, 0
            , 172, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 204, 2, 0, 0, 220, 2, 0, 0, 236, 2, 0
            , 0, 16, 4, 0, 0, 82, 68, 69, 70, 144, 2, 0, 0, 3, 0, 0, 0, 180, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 104, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 164, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 172
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 66, 117, 102, 102, 101, 114, 49, 0, 66, 117, 102, 102, 101, 114, 50
            , 0, 73, 110, 102, 111, 0, 171, 171, 171, 172, 0, 0, 0, 4, 0, 0, 0, 252, 0, 0, 0, 16, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 1, 0, 0, 0, 228, 1, 0, 0, 4
            , 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 164, 0, 0, 0, 1, 0, 0, 0, 64, 2, 0, 0
            , 4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 156, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0
            , 0, 2, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255
            , 255, 255, 0, 0, 0, 0, 204, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168
            , 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 211, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 218, 1, 0, 0, 12, 0
            , 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 76, 101, 110, 103, 116, 104, 0, 105, 110, 116, 0, 171
            , 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 1, 0, 0, 100, 117, 109, 109, 121, 49, 0, 100, 117, 109
            , 109, 121, 50, 0, 100, 117, 109, 109, 121, 51, 0, 171, 171, 171, 12, 2, 0, 0, 0, 0, 0, 0, 4
            , 0, 0, 0, 2, 0, 0, 0, 28, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 255, 255, 255, 255, 0, 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0
            , 171, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 2, 0, 0, 12, 2, 0, 0, 0, 0, 0, 0, 4
            , 0, 0, 0, 2, 0, 0, 0, 28, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 255, 255, 255, 255, 0, 0, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72
            , 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46
            , 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8
            , 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 28, 1, 0, 0, 80, 0, 5, 0
            , 71, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, 158, 0, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 4, 0, 0, 0, 158, 0, 0, 4, 0, 224
            , 17, 0, 1, 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 18, 0, 2, 0, 104, 0, 0, 2, 1
            , 0, 0, 0, 155, 0, 0, 4, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7
            , 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 167, 0
            , 0, 138, 2, 35, 0, 128, 131, 153, 25, 0, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 1
            , 64, 0, 0, 0, 0, 0, 0, 6, 224, 17, 0, 0, 0, 0, 0, 167, 0, 0, 138, 2, 35, 0, 128
            , 131, 153, 25, 0, 34, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0
            , 0, 6, 224, 17, 0, 1, 0, 0, 0, 0, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0
            , 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 168, 0, 0, 8, 18, 224, 17, 0, 0
            , 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0
            , 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
            , 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Texture1 : register(u0);
        RWTexture2D<float> Texture2 : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;

            int dummy2;
            int dummy3;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height)
            {
                return;
            }

            float val = Texture1[id.xy];
            Texture1[id.xy] = val + Texture2[id.xy];
        }

                */
        public static byte[] Add2 = new byte[]
        {
68, 88, 66, 67, 74, 16, 168, 194, 76, 250, 0, 152, 60, 11, 142, 72, 252, 88, 30, 54, 1, 0, 0, 0
            , 252, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 24, 2, 0, 0, 40, 2, 0, 0, 56, 2, 0
            , 0, 96, 3, 0, 0, 82, 68, 69, 70, 220, 1, 0, 0, 1, 0, 0, 0, 180, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 177, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 165, 0, 0, 0, 4, 0, 0, 0, 5, 0
            , 0, 0, 4, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 174
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 84, 101, 120, 116, 117, 114, 101, 49, 0, 84, 101, 120, 116, 117, 114
            , 101, 50, 0, 73, 110, 102, 111, 0, 171, 174, 0, 0, 0, 4, 0, 0, 0, 204, 0, 0, 0, 16, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 156, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 120, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 163, 1
            , 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 170, 1, 0, 0, 12, 0, 0, 0
            , 4, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0
            , 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 114, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 100, 117, 109, 109, 121
            , 50, 0, 100, 117, 109, 109, 121, 51, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32
            , 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48
            , 46, 49, 0, 171, 171, 171, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79
            , 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 32, 1, 0, 0
            , 80, 0, 5, 0, 72, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0
            , 0, 1, 0, 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 156, 24
            , 0, 4, 0, 224, 17, 0, 1, 0, 0, 0, 85, 85, 0, 0, 95, 0, 0, 2, 50, 0, 2, 0, 104
            , 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0
            , 80, 0, 0, 7, 50, 0, 16, 0, 0, 0, 0, 0, 70, 0, 2, 0, 70, 128, 32, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0
            , 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62
            , 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136, 194, 0, 0, 128, 67, 85, 21, 0, 18, 0, 16, 0
            , 0, 0, 0, 0, 70, 5, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 163, 0, 0, 136, 194, 0, 0
            , 128, 67, 85, 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 5, 2, 0, 22, 238, 17, 0, 1, 0
            , 0, 0, 0, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10
            , 0, 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0, 0, 0, 0, 70, 5, 2, 0
            , 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 10, 0, 0
            , 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0
            , 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Texture1 : register(u0);
        RWTexture3D<float> Texture2 : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;
            int Depth;

            int dummy3;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height || id.z >= Depth)
            {
                return;
            }

            float val = Texture1[id];
            Texture1[id] = val + Texture2[id];
        }

                */
        public static byte[] Add3 = new byte[]
        {
68, 88, 66, 67, 241, 159, 209, 255, 204, 83, 158, 91, 182, 59, 34, 52, 134, 80, 215, 207, 1, 0, 0, 0
            , 20, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 20, 2, 0, 0, 36, 2, 0, 0, 52, 2, 0
            , 0, 120, 3, 0, 0, 82, 68, 69, 70, 216, 1, 0, 0, 1, 0, 0, 0, 180, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 176, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 165, 0, 0, 0, 4, 0, 0, 0, 5, 0
            , 0, 0, 8, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 174
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 84, 101, 120, 116, 117, 114, 101, 49, 0, 84, 101, 120, 116, 117, 114
            , 101, 50, 0, 73, 110, 102, 111, 0, 171, 174, 0, 0, 0, 4, 0, 0, 0, 204, 0, 0, 0, 16, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 156, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 120, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 163, 1
            , 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 169, 1, 0, 0, 12, 0, 0, 0
            , 4, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0
            , 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 114, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 68, 101, 112, 116, 104
            , 0, 100, 117, 109, 109, 121, 51, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72
            , 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46
            , 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8
            , 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 60, 1, 0, 0, 80, 0, 5, 0
            , 79, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, 156, 40, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 156, 40, 0, 4, 0, 224
            , 17, 0, 1, 0, 0, 0, 85, 85, 0, 0, 95, 0, 0, 2, 114, 0, 2, 0, 104, 0, 0, 2, 1
            , 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7
            , 114, 0, 16, 0, 0, 0, 0, 0, 70, 2, 2, 0, 70, 130, 32, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0
            , 16, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0
            , 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0
            , 62, 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136, 66, 1, 0, 128, 67, 85, 21, 0, 18, 0, 16
            , 0, 0, 0, 0, 0, 70, 10, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 163, 0, 0, 136, 66, 1
            , 0, 128, 67, 85, 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 10, 2, 0, 22, 238, 17, 0, 1
            , 0, 0, 0, 0, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0
            , 10, 0, 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0, 0, 0, 0, 70, 10, 2
            , 0, 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 11, 0
            , 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3
            , 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWStructuredBuffer<float> Input : register(u0);
        RWStructuredBuffer<float> Output : register(u1);

        cbuffer Info : register(b0)
        {
            int Length;

            int dummy1;
            int dummy2;
            int dummy3;
        }

        [numthreads(16, 1, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Length)
            {
                return;
            }

            Output[id.x] = exp(Input[id.x]);
        }

                */
        public static byte[] Exp1 = new byte[]
        {
68, 88, 66, 67, 81, 231, 18, 219, 53, 26, 108, 92, 204, 52, 38, 26, 152, 230, 65, 97, 1, 0, 0, 0
            , 148, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 200, 2, 0, 0, 216, 2, 0, 0, 232, 2, 0
            , 0, 248, 3, 0, 0, 82, 68, 69, 70, 140, 2, 0, 0, 3, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 100, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 248, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 1, 0, 0, 0, 224, 1, 0, 0, 4, 0, 0, 0, 0
            , 0, 0, 0, 3, 0, 0, 0, 162, 0, 0, 0, 1, 0, 0, 0, 60, 2, 0, 0, 4, 0, 0, 0
            , 0, 0, 0, 0, 3, 0, 0, 0, 152, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0
            , 0, 164, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
            , 0, 0, 200, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 207, 1, 0, 0
            , 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 214, 1, 0, 0, 12, 0, 0, 0, 4, 0
            , 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 76, 101, 110, 103, 116, 104, 0, 105, 110, 116, 0, 171, 0, 0, 2, 0
            , 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 159, 1, 0, 0, 100, 117, 109, 109, 121, 49, 0, 100, 117, 109, 109, 121, 50, 0
            , 100, 117, 109, 109, 121, 51, 0, 171, 171, 171, 8, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 24, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0, 171, 0, 0, 3
            , 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 17, 2, 0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 24, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76, 32
            , 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73, 83
            , 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0, 0
            , 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 8, 1, 0, 0, 80, 0, 5, 0, 66, 0, 0, 0
            , 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 158, 0, 0
            , 4, 0, 224, 17, 0, 0, 0, 0, 0, 4, 0, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 1, 0
            , 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 18, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155
            , 0, 0, 4, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 18, 0, 16, 0
            , 0, 0, 0, 0, 10, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 4
            , 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 167, 0, 0, 138, 2, 35
            , 0, 128, 131, 153, 25, 0, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0
            , 0, 0, 0, 6, 224, 17, 0, 0, 0, 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0
            , 10, 0, 16, 0, 0, 0, 0, 0, 1, 64, 0, 0, 59, 170, 184, 63, 25, 0, 0, 5, 18, 0, 16
            , 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 168, 0, 0, 8, 18, 224, 17, 0, 1, 0
            , 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 62
            , 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Input : register(u0);
        RWTexture2D<float> Output : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;

            int dummy2;
            int dummy3;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height)
            {
                return;
            }

            Output[id.xy] = exp(Input[id.xy]);
        }

                */
        public static byte[] Exp2 = new byte[]
        {
68, 88, 66, 67, 206, 6, 150, 140, 109, 214, 251, 225, 137, 192, 125, 148, 231, 153, 90, 32, 1, 0, 0, 0
            , 236, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 20, 2, 0, 0, 36, 2, 0, 0, 52, 2, 0
            , 0, 80, 3, 0, 0, 82, 68, 69, 70, 216, 1, 0, 0, 1, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 173, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 4, 0, 0, 0, 5, 0
            , 0, 0, 4, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 200, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 116
            , 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 152, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 159, 1, 0, 0, 8, 0
            , 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 166, 1, 0, 0, 12, 0, 0, 0, 4, 0, 0, 0
            , 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0, 2, 0, 1, 0
            , 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 110, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 100, 117, 109, 109, 121, 50, 0, 100, 117
            , 109, 109, 121, 51, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76
            , 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 171
            , 171, 171, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8
            , 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 20, 1, 0, 0, 80, 0, 5, 0
            , 69, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 156, 24, 0, 4, 0, 224
            , 17, 0, 1, 0, 0, 0, 85, 85, 0, 0, 95, 0, 0, 2, 50, 0, 2, 0, 104, 0, 0, 2, 1
            , 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7
            , 50, 0, 16, 0, 0, 0, 0, 0, 70, 0, 2, 0, 70, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0
            , 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21
            , 0, 0, 1, 163, 0, 0, 136, 194, 0, 0, 128, 67, 85, 21, 0, 18, 0, 16, 0, 0, 0, 0, 0
            , 70, 5, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0
            , 0, 10, 0, 16, 0, 0, 0, 0, 0, 1, 64, 0, 0, 59, 170, 184, 63, 25, 0, 0, 5, 18, 0
            , 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 1
            , 0, 0, 0, 70, 5, 2, 0, 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84
            , 148, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0
            , 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Input : register(u0);
        RWTexture3D<float> Output : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;
            int Depth;

            int dummy3;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height || id.z >= Depth)
            {
                return;
            }

            Output[id] = exp(Input[id]);
        }

                */
        public static byte[] Exp3 = new byte[]
        {
68, 88, 66, 67, 202, 38, 148, 165, 54, 159, 94, 19, 125, 37, 74, 64, 68, 158, 206, 76, 1, 0, 0, 0
            , 4, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 16, 2, 0, 0, 32, 2, 0, 0, 48, 2, 0
            , 0, 104, 3, 0, 0, 82, 68, 69, 70, 212, 1, 0, 0, 1, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 172, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 4, 0, 0, 0, 5, 0
            , 0, 0, 8, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 200, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 116
            , 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 152, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 159, 1, 0, 0, 8, 0
            , 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 165, 1, 0, 0, 12, 0, 0, 0, 4, 0, 0, 0
            , 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0, 2, 0, 1, 0
            , 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 110, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 68, 101, 112, 116, 104, 0, 100, 117, 109
            , 109, 121, 51, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76, 32
            , 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73, 83
            , 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0, 0
            , 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 48, 1, 0, 0, 80, 0, 5, 0, 76, 0, 0, 0
            , 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 156, 40, 0
            , 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 156, 40, 0, 4, 0, 224, 17, 0, 1, 0
            , 0, 0, 85, 85, 0, 0, 95, 0, 0, 2, 114, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155
            , 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 114, 0, 16, 0
            , 0, 0, 0, 0, 70, 2, 2, 0, 70, 130, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0
            , 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0
            , 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0, 0, 10
            , 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1
            , 21, 0, 0, 1, 163, 0, 0, 136, 66, 1, 0, 128, 67, 85, 21, 0, 18, 0, 16, 0, 0, 0, 0
            , 0, 70, 10, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0
            , 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 1, 64, 0, 0, 59, 170, 184, 63, 25, 0, 0, 5, 18
            , 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0
            , 1, 0, 0, 0, 70, 10, 2, 0, 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65
            , 84, 148, 0, 0, 0, 11, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0
            , 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWStructuredBuffer<float> Buffer1 : register(u0);
        RWStructuredBuffer<float> Buffer2 : register(u1);

        cbuffer Info : register(b0)
        {
            int Length;

            int dummy1;
            int dummy2;
            int dummy3;
        }

        [numthreads(16, 1, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Length)
            {
                return;
            }

            float val = Buffer1[id.x];
            Buffer1[id.x] = val * Buffer2[id.x];
        }

                */
        public static byte[] Mul1 = new byte[]
        {
68, 88, 66, 67, 10, 118, 16, 45, 163, 136, 67, 118, 30, 138, 42, 114, 76, 21, 119, 42, 1, 0, 0, 0
            , 172, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 204, 2, 0, 0, 220, 2, 0, 0, 236, 2, 0
            , 0, 16, 4, 0, 0, 82, 68, 69, 70, 144, 2, 0, 0, 3, 0, 0, 0, 180, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 104, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 164, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 172
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 66, 117, 102, 102, 101, 114, 49, 0, 66, 117, 102, 102, 101, 114, 50
            , 0, 73, 110, 102, 111, 0, 171, 171, 171, 172, 0, 0, 0, 4, 0, 0, 0, 252, 0, 0, 0, 16, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 1, 0, 0, 0, 228, 1, 0, 0, 4
            , 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 164, 0, 0, 0, 1, 0, 0, 0, 64, 2, 0, 0
            , 4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 156, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0
            , 0, 2, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255
            , 255, 255, 0, 0, 0, 0, 204, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168
            , 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 211, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 218, 1, 0, 0, 12, 0
            , 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 76, 101, 110, 103, 116, 104, 0, 105, 110, 116, 0, 171
            , 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 1, 0, 0, 100, 117, 109, 109, 121, 49, 0, 100, 117, 109
            , 109, 121, 50, 0, 100, 117, 109, 109, 121, 51, 0, 171, 171, 171, 12, 2, 0, 0, 0, 0, 0, 0, 4
            , 0, 0, 0, 2, 0, 0, 0, 28, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 255, 255, 255, 255, 0, 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0
            , 171, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 2, 0, 0, 12, 2, 0, 0, 0, 0, 0, 0, 4
            , 0, 0, 0, 2, 0, 0, 0, 28, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0
            , 255, 255, 255, 255, 0, 0, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72
            , 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46
            , 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8
            , 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 28, 1, 0, 0, 80, 0, 5, 0
            , 71, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, 158, 0, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 4, 0, 0, 0, 158, 0, 0, 4, 0, 224
            , 17, 0, 1, 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 18, 0, 2, 0, 104, 0, 0, 2, 1
            , 0, 0, 0, 155, 0, 0, 4, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7
            , 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 167, 0
            , 0, 138, 2, 35, 0, 128, 131, 153, 25, 0, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 1
            , 64, 0, 0, 0, 0, 0, 0, 6, 224, 17, 0, 0, 0, 0, 0, 167, 0, 0, 138, 2, 35, 0, 128
            , 131, 153, 25, 0, 34, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0
            , 0, 6, 224, 17, 0, 1, 0, 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0
            , 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 168, 0, 0, 8, 18, 224, 17, 0, 0
            , 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0
            , 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
            , 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Texture1 : register(u0);
        RWTexture2D<float> Texture2 : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;

            int dummy2;
            int dummy3;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height)
            {
                return;
            }

            float val = Texture1[id.xy];
            Texture1[id.xy] = val * Texture2[id.xy];
        }

                */
        public static byte[] Mul2 = new byte[]
        {
68, 88, 66, 67, 230, 15, 78, 209, 84, 163, 234, 60, 182, 50, 6, 24, 85, 1, 143, 223, 1, 0, 0, 0
            , 252, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 24, 2, 0, 0, 40, 2, 0, 0, 56, 2, 0
            , 0, 96, 3, 0, 0, 82, 68, 69, 70, 220, 1, 0, 0, 1, 0, 0, 0, 180, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 177, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 165, 0, 0, 0, 4, 0, 0, 0, 5, 0
            , 0, 0, 4, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 174
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 84, 101, 120, 116, 117, 114, 101, 49, 0, 84, 101, 120, 116, 117, 114
            , 101, 50, 0, 73, 110, 102, 111, 0, 171, 174, 0, 0, 0, 4, 0, 0, 0, 204, 0, 0, 0, 16, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 156, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 120, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 163, 1
            , 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 170, 1, 0, 0, 12, 0, 0, 0
            , 4, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0
            , 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 114, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 100, 117, 109, 109, 121
            , 50, 0, 100, 117, 109, 109, 121, 51, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32
            , 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48
            , 46, 49, 0, 171, 171, 171, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79
            , 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 32, 1, 0, 0
            , 80, 0, 5, 0, 72, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0
            , 0, 1, 0, 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 156, 24
            , 0, 4, 0, 224, 17, 0, 1, 0, 0, 0, 85, 85, 0, 0, 95, 0, 0, 2, 50, 0, 2, 0, 104
            , 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0
            , 80, 0, 0, 7, 50, 0, 16, 0, 0, 0, 0, 0, 70, 0, 2, 0, 70, 128, 32, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0
            , 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62
            , 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136, 194, 0, 0, 128, 67, 85, 21, 0, 18, 0, 16, 0
            , 0, 0, 0, 0, 70, 5, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 163, 0, 0, 136, 194, 0, 0
            , 128, 67, 85, 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 5, 2, 0, 22, 238, 17, 0, 1, 0
            , 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10
            , 0, 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0, 0, 0, 0, 70, 5, 2, 0
            , 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 10, 0, 0
            , 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0
            , 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Texture1 : register(u0);
        RWTexture3D<float> Texture2 : register(u1);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;
            int Depth;

            int dummy3;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height || id.z >= Depth)
            {
                return;
            }

            float val = Texture1[id];
            Texture1[id] = val * Texture2[id];
        }

                */
        public static byte[] Mul3 = new byte[]
        {
68, 88, 66, 67, 35, 164, 155, 20, 141, 210, 98, 253, 90, 173, 166, 221, 62, 187, 227, 191, 1, 0, 0, 0
            , 20, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 20, 2, 0, 0, 36, 2, 0, 0, 52, 2, 0
            , 0, 120, 3, 0, 0, 82, 68, 69, 70, 216, 1, 0, 0, 1, 0, 0, 0, 180, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 176, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 165, 0, 0, 0, 4, 0, 0, 0, 5, 0
            , 0, 0, 8, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 174
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 84, 101, 120, 116, 117, 114, 101, 49, 0, 84, 101, 120, 116, 117, 114
            , 101, 50, 0, 73, 110, 102, 111, 0, 171, 174, 0, 0, 0, 4, 0, 0, 0, 204, 0, 0, 0, 16, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 156, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 120, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 163, 1
            , 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 169, 1, 0, 0, 12, 0, 0, 0
            , 4, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0
            , 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 114, 1, 0, 0, 72, 101, 105, 103, 104, 116, 0, 68, 101, 112, 116, 104
            , 0, 100, 117, 109, 109, 121, 51, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72
            , 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46
            , 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8
            , 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 60, 1, 0, 0, 80, 0, 5, 0
            , 79, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, 156, 40, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 156, 40, 0, 4, 0, 224
            , 17, 0, 1, 0, 0, 0, 85, 85, 0, 0, 95, 0, 0, 2, 114, 0, 2, 0, 104, 0, 0, 2, 1
            , 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7
            , 114, 0, 16, 0, 0, 0, 0, 0, 70, 2, 2, 0, 70, 130, 32, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0
            , 16, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0
            , 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0
            , 62, 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136, 66, 1, 0, 128, 67, 85, 21, 0, 18, 0, 16
            , 0, 0, 0, 0, 0, 70, 10, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 163, 0, 0, 136, 66, 1
            , 0, 128, 67, 85, 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 10, 2, 0, 22, 238, 17, 0, 1
            , 0, 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0
            , 10, 0, 16, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0, 0, 0, 0, 70, 10, 2
            , 0, 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 11, 0
            , 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3
            , 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWStructuredBuffer<float> Buffer1 : register(u0);

        cbuffer Info : register(b0)
        {
            int Length;

            int dummy1;
            int dummy2;

            float Value;
        }

        [numthreads(16, 1, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Length)
            {
                return;
            }

            float val = Buffer1[id.x];
            Buffer1[id.x] = val * Value;
        }

                */
        public static byte[] ValMul1 = new byte[]
        {
68, 88, 66, 67, 5, 106, 43, 46, 252, 110, 7, 204, 253, 235, 142, 220, 82, 173, 36, 224, 1, 0, 0, 0
            , 52, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 136, 2, 0, 0, 152, 2, 0, 0, 168, 2, 0
            , 0, 152, 3, 0, 0, 82, 68, 69, 70, 76, 2, 0, 0, 2, 0, 0, 0, 140, 0, 0, 0, 2, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 36, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 124, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 66
            , 117, 102, 102, 101, 114, 49, 0, 73, 110, 102, 111, 0, 171, 171, 171, 132, 0, 0, 0, 4, 0, 0, 0
            , 188, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 1, 0, 0
            , 0, 204, 1, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 92, 1, 0, 0, 0, 0
            , 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 140, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0
            , 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 147, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 1
            , 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 154
            , 1, 0, 0, 12, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0
            , 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 76, 101, 110, 103, 116, 104, 0
            , 105, 110, 116, 0, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 1, 0, 0, 100, 117, 109, 109, 121
            , 49, 0, 100, 117, 109, 109, 121, 50, 0, 86, 97, 108, 117, 101, 0, 102, 108, 111, 97, 116, 0, 171, 171
            , 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 1, 0, 0, 244, 1, 0, 0, 0, 0, 0, 0, 4, 0
            , 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 171, 171, 171, 0, 0, 3, 0
            , 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 160, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32
            , 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48
            , 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78
            , 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 232, 0, 0, 0, 80, 0, 5
            , 0, 58, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0
            , 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 18
            , 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 16, 0, 0, 0, 1, 0, 0, 0
            , 1, 0, 0, 0, 80, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 10, 128, 32
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0
            , 0, 1, 21, 0, 0, 1, 167, 0, 0, 138, 2, 35, 0, 128, 131, 153, 25, 0, 18, 0, 16, 0, 0
            , 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 6, 224, 17, 0, 0, 0, 0, 0
            , 56, 0, 0, 8, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 58, 128, 32
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 8, 18, 224, 17, 0, 0, 0, 0, 0, 10, 0
            , 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83
            , 84, 65, 84, 148, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
            , 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Texture1 : register(u0);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;

            int dummy1;
            float Value;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height)
            {
                return;
            }

            float val = Texture1[id.xy];
            Texture1[id.xy] = val * Value;
        }

                */
        public static byte[] ValMul2 = new byte[]
        {
68, 88, 66, 67, 139, 2, 27, 63, 218, 200, 238, 122, 161, 48, 217, 41, 93, 113, 212, 150, 1, 0, 0, 0
            , 208, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 24, 2, 0, 0, 40, 2, 0, 0, 56, 2, 0
            , 0, 52, 3, 0, 0, 82, 68, 69, 70, 220, 1, 0, 0, 1, 0, 0, 0, 140, 0, 0, 0, 2, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 180, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 124, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 84
            , 101, 120, 116, 117, 114, 101, 49, 0, 73, 110, 102, 111, 0, 171, 171, 133, 0, 0, 0, 4, 0, 0, 0
            , 164, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 0
            , 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 116, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 123, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 130, 1
            , 0, 0, 12, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110
            , 116, 0, 171, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 1, 0, 0, 72, 101, 105, 103, 104, 116
            , 0, 100, 117, 109, 109, 121, 49, 0, 86, 97, 108, 117, 101, 0, 102, 108, 111, 97, 116, 0, 171, 171, 0
            , 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 136, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40
            , 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114
            , 32, 49, 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79
            , 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 244, 0, 0, 0
            , 80, 0, 5, 0, 61, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0
            , 0, 1, 0, 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 95, 0
            , 0, 2, 50, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8
            , 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 50, 0, 16, 0, 0, 0, 0, 0, 70, 0, 2, 0
            , 70, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0
            , 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0
            , 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136, 194, 0, 0, 128, 67
            , 85, 21, 0, 18, 0, 16, 0, 0, 0, 0, 0, 70, 5, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0
            , 56, 0, 0, 8, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 58, 128, 32
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0, 0, 0, 0, 70, 5
            , 2, 0, 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 9
            , 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
            , 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Texture1 : register(u0);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;
            int Depth;
            float Value;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height || id.z >= Depth)
            {
                return;
            }

            float val = Texture1[id];
            Texture1[id] = val * Value;
        }

                */
        public static byte[] ValMul3 = new byte[]
        {
68, 88, 66, 67, 64, 104, 150, 33, 212, 218, 209, 27, 119, 207, 74, 136, 228, 39, 121, 49, 1, 0, 0, 0
            , 236, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 24, 2, 0, 0, 40, 2, 0, 0, 56, 2, 0
            , 0, 80, 3, 0, 0, 82, 68, 69, 70, 220, 1, 0, 0, 1, 0, 0, 0, 140, 0, 0, 0, 2, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 180, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 124, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 84
            , 101, 120, 116, 117, 114, 101, 49, 0, 73, 110, 102, 111, 0, 171, 171, 133, 0, 0, 0, 4, 0, 0, 0
            , 164, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 0
            , 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 116, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 123, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 129, 1
            , 0, 0, 12, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110
            , 116, 0, 171, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 1, 0, 0, 72, 101, 105, 103, 104, 116
            , 0, 68, 101, 112, 116, 104, 0, 86, 97, 108, 117, 101, 0, 102, 108, 111, 97, 116, 0, 171, 171, 171, 0
            , 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 135, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40
            , 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114
            , 32, 49, 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79
            , 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 16, 1, 0, 0
            , 80, 0, 5, 0, 68, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0
            , 0, 1, 0, 0, 0, 156, 40, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 95, 0
            , 0, 2, 114, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8
            , 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 114, 0, 16, 0, 0, 0, 0, 0, 70, 2, 2, 0
            , 70, 130, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0
            , 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0
            , 16, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 31
            , 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 163, 0, 0, 136
            , 66, 1, 0, 128, 67, 85, 21, 0, 18, 0, 16, 0, 0, 0, 0, 0, 70, 10, 2, 0, 70, 238, 17
            , 0, 0, 0, 0, 0, 56, 0, 0, 8, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0
            , 0, 0, 58, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 6, 242, 224, 17, 0, 0
            , 0, 0, 0, 70, 10, 2, 0, 6, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84
            , 148, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0
            , 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWStructuredBuffer<float> Buffer1 : register(u0);

        cbuffer Info : register(b0)
        {
            int Length;

            int dummy1;
            int dummy2;
            int dummy3;
        }

        [numthreads(16, 1, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Length)
            {
                return;
            }

            Buffer1[id.x] = 0;
        }

                */
        public static byte[] Zero1 = new byte[]
        {
68, 88, 66, 67, 174, 242, 24, 153, 229, 117, 71, 249, 164, 165, 143, 197, 82, 188, 86, 38, 1, 0, 0, 0
            , 200, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 100, 2, 0, 0, 116, 2, 0, 0, 132, 2, 0
            , 0, 44, 3, 0, 0, 82, 68, 69, 70, 40, 2, 0, 0, 2, 0, 0, 0, 140, 0, 0, 0, 2, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 0, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 124, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 66
            , 117, 102, 102, 101, 114, 49, 0, 73, 110, 102, 111, 0, 171, 171, 171, 132, 0, 0, 0, 4, 0, 0, 0
            , 188, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 1, 0, 0
            , 0, 164, 1, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 92, 1, 0, 0, 0, 0
            , 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 140, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0
            , 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 147, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 1
            , 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 154
            , 1, 0, 0, 12, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0
            , 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 76, 101, 110, 103, 116, 104, 0
            , 105, 110, 116, 0, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 1, 0, 0, 100, 117, 109, 109, 121
            , 49, 0, 100, 117, 109, 109, 121, 50, 0, 100, 117, 109, 109, 121, 51, 0, 171, 171, 171, 204, 1, 0, 0
            , 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 220, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 102
            , 108, 111, 97, 116, 0, 171, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 213, 1, 0, 0, 77, 105, 99, 114
            , 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67
            , 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0
            , 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83
            , 72, 69, 88, 160, 0, 0, 0, 80, 0, 5, 0, 40, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4
            , 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 0, 0, 0
            , 0, 4, 0, 0, 0, 95, 0, 0, 2, 18, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0
            , 0, 4, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 18, 0, 16, 0, 0
            , 0, 0, 0, 10, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 4, 3
            , 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 168, 0, 0, 8, 18, 224, 17
            , 0, 0, 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 1, 64, 0, 0, 0, 0
            , 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0
            , 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0
            , 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Texture1 : register(u0);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;

            int dummy1;
            int dummy2;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height)
            {
                return;
            }

            Texture1[id.xy] = 0;
        }

                */
        public static byte[] Zero2 = new byte[]
        {
68, 88, 66, 67, 163, 189, 231, 108, 82, 163, 103, 202, 200, 223, 73, 29, 68, 252, 253, 19, 1, 0, 0, 0
            , 116, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 240, 1, 0, 0, 0, 2, 0, 0, 16, 2, 0
            , 0, 216, 2, 0, 0, 82, 68, 69, 70, 180, 1, 0, 0, 1, 0, 0, 0, 140, 0, 0, 0, 2, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 137, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 124, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 84
            , 101, 120, 116, 117, 114, 101, 49, 0, 73, 110, 102, 111, 0, 171, 171, 133, 0, 0, 0, 4, 0, 0, 0
            , 164, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 0
            , 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 116, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 123, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 130, 1
            , 0, 0, 12, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110
            , 116, 0, 171, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 1, 0, 0, 72, 101, 105, 103, 104, 116
            , 0, 100, 117, 109, 109, 121, 49, 0, 100, 117, 109, 109, 121, 50, 0, 77, 105, 99, 114, 111, 115, 111, 102
            , 116, 32, 40, 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105
            , 108, 101, 114, 32, 49, 48, 46, 49, 0, 171, 171, 171, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0
            , 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72
            , 69, 88, 192, 0, 0, 0, 80, 0, 5, 0, 48, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70
            , 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0
            , 85, 85, 0, 0, 95, 0, 0, 2, 50, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0, 0
            , 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 50, 0, 16, 0, 0, 0
            , 0, 0, 70, 0, 2, 0, 70, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18
            , 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0
            , 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 164, 0, 0
            , 9, 242, 224, 17, 0, 0, 0, 0, 0, 70, 5, 2, 0, 2, 64, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 7
            , 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Texture1 : register(u0);

        cbuffer Info : register(b0)
        {
            int Width;
            int Height;
            int Depth;

            int dummy1;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= Width || id.y >= Height || id.z >= Depth)
            {
                return;
            }

            Texture1[id] = 0;
        }

                */
        public static byte[] Zero3 = new byte[]
        {
68, 88, 66, 67, 254, 54, 219, 160, 65, 120, 132, 71, 177, 87, 64, 136, 48, 103, 158, 199, 1, 0, 0, 0
            , 140, 3, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 236, 1, 0, 0, 252, 1, 0, 0, 12, 2, 0
            , 0, 240, 2, 0, 0, 82, 68, 69, 70, 176, 1, 0, 0, 1, 0, 0, 0, 140, 0, 0, 0, 2, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 136, 1, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 124, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 84
            , 101, 120, 116, 117, 114, 101, 49, 0, 73, 110, 102, 111, 0, 171, 171, 133, 0, 0, 0, 4, 0, 0, 0
            , 164, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 0
            , 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 116, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 123, 1, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 1, 0
            , 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 129, 1
            , 0, 0, 12, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 87, 105, 100, 116, 104, 0, 105, 110
            , 116, 0, 171, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 1, 0, 0, 72, 101, 105, 103, 104, 116
            , 0, 68, 101, 112, 116, 104, 0, 100, 117, 109, 109, 121, 49, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116
            , 32, 40, 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108
            , 101, 114, 32, 49, 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0
            , 0, 79, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 220, 0
            , 0, 0, 80, 0, 5, 0, 55, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0
            , 0, 0, 0, 1, 0, 0, 0, 156, 40, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0
            , 95, 0, 0, 2, 114, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0
            , 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 114, 0, 16, 0, 0, 0, 0, 0, 70, 2
            , 2, 0, 70, 130, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0
            , 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 60, 0, 0, 7
            , 18, 0, 16, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0
            , 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 164, 0
            , 0, 9, 242, 224, 17, 0, 0, 0, 0, 0, 70, 10, 2, 0, 2, 64, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0
            , 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
    }
}
