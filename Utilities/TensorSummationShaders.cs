using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Neuran.Utilities
{
    internal static class TensorSummationShaders
    {
        /*
#pragma kernel CSMain

// These buffers are divided into batchs, each with size InputBatchLength and OutputBatchLength.
// Each batch computes the summation separately from the other batches.
// It's like simulating SingleSummation shader more than once at the same time.
RWStructuredBuffer<float> Input : register(u0);
RWStructuredBuffer<float> Output : register(u1);

cbuffer Info : register(b0)
{
    int InputBatchLength;
    int OutputBatchLength;
    int GroupSize; //The sum size. 8 is recommended.
    int TotalBatches;
    
    int LengthMod; //= mod(InputBatchLength, GroupSize) == 0 ? 0 : GroupSize - mod(InputBatchLength, GroupSize)
    int dummy1;
    int dummy2;
    int dummy3;
}

[numthreads(16, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= OutputBatchLength * TotalBatches)
    {
        return;
    }
    
    int batchIndex = id.x / OutputBatchLength;
    int indexOffset = batchIndex * LengthMod;
    int inputIndex = id.x * GroupSize - indexOffset;
    float sum = 0;
    
    for (int i = 0; i < GroupSize; i++)
    {
        if (i + inputIndex < InputBatchLength * (batchIndex + 1))
        {
            sum += Input[i + inputIndex];
        }
    }

    Output[id.x] = sum;
}
*/
        public static byte[] BatchSummation = new byte[]
        {
68, 88, 66, 67, 181, 39, 44, 54, 149, 253, 195, 43, 17, 92, 238, 213, 164, 0, 231, 149, 1, 0, 0, 0
            , 252, 6, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 164, 3, 0, 0, 180, 3, 0, 0, 196, 3, 0
            , 0, 96, 6, 0, 0, 82, 68, 69, 70, 104, 3, 0, 0, 3, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 64, 3, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 8, 0, 0, 0, 248, 0, 0, 0, 32, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 1, 0, 0, 0, 188, 2, 0, 0, 4, 0, 0, 0, 0
            , 0, 0, 0, 3, 0, 0, 0, 162, 0, 0, 0, 1, 0, 0, 0, 24, 3, 0, 0, 4, 0, 0, 0
            , 0, 0, 0, 0, 3, 0, 0, 0, 56, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0
            , 0, 80, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
            , 0, 0, 116, 2, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 2, 0, 0, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 134, 2, 0, 0
            , 8, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 144, 2, 0, 0, 12, 0, 0, 0, 4, 0
            , 0, 0, 2, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 157, 2, 0, 0, 16, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0
            , 80, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 167, 2, 0, 0, 20, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 174, 2, 0, 0, 24
            , 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 181, 2, 0, 0, 28, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255
            , 255, 255, 0, 0, 0, 0, 73, 110, 112, 117, 116, 66, 97, 116, 99, 104, 76, 101, 110, 103, 116, 104, 0
            , 105, 110, 116, 0, 171, 171, 171, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 2, 0, 0, 79, 117, 116
            , 112, 117, 116, 66, 97, 116, 99, 104, 76, 101, 110, 103, 116, 104, 0, 71, 114, 111, 117, 112, 83, 105, 122
            , 101, 0, 84, 111, 116, 97, 108, 66, 97, 116, 99, 104, 101, 115, 0, 76, 101, 110, 103, 116, 104, 77, 111
            , 100, 0, 100, 117, 109, 109, 121, 49, 0, 100, 117, 109, 109, 121, 50, 0, 100, 117, 109, 109, 121, 51, 0
            , 228, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 244, 2, 0, 0, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 36, 69, 108, 101, 109, 101
            , 110, 116, 0, 102, 108, 111, 97, 116, 0, 171, 0, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 237, 2, 0, 0
            , 228, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 244, 2, 0, 0, 0, 0, 0
            , 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 77, 105, 99, 114, 111, 115
            , 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109
            , 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0
            , 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69
            , 88, 148, 2, 0, 0, 80, 0, 5, 0, 165, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142
            , 32, 0, 0, 0, 0, 0, 2, 0, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 4
            , 0, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 1, 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2
            , 18, 0, 2, 0, 104, 0, 0, 2, 2, 0, 0, 0, 155, 0, 0, 4, 16, 0, 0, 0, 1, 0, 0
            , 0, 1, 0, 0, 0, 38, 0, 0, 10, 0, 208, 0, 0, 18, 0, 16, 0, 0, 0, 0, 0, 58, 128
            , 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80
            , 0, 0, 6, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 10, 0, 16, 0, 0, 0, 0, 0
            , 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 78, 0, 0
            , 8, 18, 0, 16, 0, 0, 0, 0, 0, 0, 208, 0, 0, 10, 0, 2, 0, 26, 128, 32, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 38, 0, 0, 10, 0, 208, 0, 0, 34, 0, 16, 0, 0, 0, 0, 0, 10
            , 0, 16, 128, 65, 0, 0, 0, 0, 0, 0, 0, 10, 128, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0
            , 35, 0, 0, 9, 34, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 42, 128, 32, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 30, 0, 0, 7, 18, 0, 16, 0, 0, 0
            , 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 1, 64, 0, 0, 1, 0, 0, 0, 38, 0, 0, 9, 0
            , 208, 0, 0, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 10, 128, 32, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 8, 194, 0, 16, 0, 0, 0, 0, 0, 2, 64, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 1, 33, 0
            , 0, 8, 18, 0, 16, 0, 1, 0, 0, 0, 58, 0, 16, 0, 0, 0, 0, 0, 42, 128, 32, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 3, 0, 4, 3, 10, 0, 16, 0, 1, 0, 0, 0, 30, 0, 0, 7
            , 18, 0, 16, 0, 1, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 58, 0, 16, 0, 0, 0, 0
            , 0, 34, 0, 0, 7, 34, 0, 16, 0, 1, 0, 0, 0, 10, 0, 16, 0, 1, 0, 0, 0, 10, 0
            , 16, 0, 0, 0, 0, 0, 167, 0, 0, 139, 2, 35, 0, 128, 131, 153, 25, 0, 18, 0, 16, 0, 1
            , 0, 0, 0, 10, 0, 16, 0, 1, 0, 0, 0, 1, 64, 0, 0, 0, 0, 0, 0, 6, 224, 17, 0
            , 0, 0, 0, 0, 0, 0, 0, 7, 18, 0, 16, 0, 1, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0
            , 0, 10, 0, 16, 0, 1, 0, 0, 0, 55, 0, 0, 9, 66, 0, 16, 0, 0, 0, 0, 0, 26, 0
            , 16, 0, 1, 0, 0, 0, 10, 0, 16, 0, 1, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0, 0, 30
            , 0, 0, 7, 130, 0, 16, 0, 0, 0, 0, 0, 58, 0, 16, 0, 0, 0, 0, 0, 1, 64, 0, 0
            , 1, 0, 0, 0, 22, 0, 0, 1, 168, 0, 0, 8, 18, 224, 17, 0, 1, 0, 0, 0, 10, 0, 2
            , 0, 1, 64, 0, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84
            , 65, 84, 148, 0, 0, 0, 23, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1
            , 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Input : register(u0);
        RWStructuredBuffer<float> Output : register(u1);

        cbuffer Info : register(b0)
        {
            int width;
            int height;

            int dummy1;
            int dummy2;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= width || id.y >= height)
            {
                return;
            }

            Output[id.x + id.y * width] = Input[id.xy];
        }
        */
        public static byte[] TensorCopy1 = new byte[]
        {
68, 88, 66, 67, 192, 240, 180, 170, 210, 19, 43, 140, 76, 158, 86, 176, 196, 170, 145, 147, 1, 0, 0, 0
            , 92, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 136, 2, 0, 0, 152, 2, 0, 0, 168, 2, 0
            , 0, 192, 3, 0, 0, 82, 68, 69, 70, 76, 2, 0, 0, 2, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 36, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 224, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 1, 0, 0, 0, 200, 1, 0, 0, 4, 0, 0, 0, 0
            , 0, 0, 0, 3, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0
            , 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 176, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 140, 1, 0, 0, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 183, 1, 0, 0, 8
            , 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 190, 1, 0, 0, 12, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255
            , 255, 255, 0, 0, 0, 0, 119, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0, 2, 0, 1
            , 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 134, 1, 0, 0, 104, 101, 105, 103, 104, 116, 0, 100, 117, 109, 109, 121, 49, 0, 100
            , 117, 109, 109, 121, 50, 0, 171, 171, 171, 240, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0
            , 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0, 171, 0, 0, 3, 0
            , 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 249, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32
            , 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48
            , 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78
            , 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 16, 1, 0, 0, 80, 0, 5
            , 0, 68, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0
            , 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 158, 0, 0, 4, 0
            , 224, 17, 0, 1, 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 50, 0, 2, 0, 104, 0, 0, 2
            , 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0
            , 7, 50, 0, 16, 0, 0, 0, 0, 0, 70, 0, 2, 0, 70, 128, 32, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10
            , 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1
            , 21, 0, 0, 1, 35, 0, 0, 8, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 2, 0, 10, 128, 32
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 2, 0, 163, 0, 0, 136, 194, 0, 0, 128, 67, 85
            , 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 5, 2, 0, 22, 238, 17, 0, 0, 0, 0, 0, 168
            , 0, 0, 9, 18, 224, 17, 0, 1, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 1, 64, 0, 0
            , 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0
            , 0, 9, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0
            , 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Input : register(u0);
        RWStructuredBuffer<float> Output : register(u1);

        cbuffer Info : register(b0)
        {
            int width;
            int height;
            int depth;

            int dummy1;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= width || id.y >= height || id.z >= depth)
            {
                return;
            }

            Output[id.x + id.y * width + id.z * width * height] = Input[id];
        }
        */
        public static byte[] TensorCopy2 = new byte[]
        {
68, 88, 66, 67, 131, 23, 43, 78, 165, 101, 116, 78, 144, 229, 1, 33, 99, 9, 213, 185, 1, 0, 0, 0
            , 188, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 132, 2, 0, 0, 148, 2, 0, 0, 164, 2, 0
            , 0, 32, 4, 0, 0, 82, 68, 69, 70, 72, 2, 0, 0, 2, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 32, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 224, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 1, 0, 0, 0, 196, 1, 0, 0, 4, 0, 0, 0, 0
            , 0, 0, 0, 3, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0
            , 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 176, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 140, 1, 0, 0, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 183, 1, 0, 0, 8
            , 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 189, 1, 0, 0, 12, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255
            , 255, 255, 0, 0, 0, 0, 119, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0, 2, 0, 1
            , 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 134, 1, 0, 0, 104, 101, 105, 103, 104, 116, 0, 100, 101, 112, 116, 104, 0, 100, 117
            , 109, 109, 121, 49, 0, 236, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 252, 1
            , 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 36
            , 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0, 171, 0, 0, 3, 0, 1, 0, 1, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 245, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76
            , 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73
            , 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0
            , 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 116, 1, 0, 0, 80, 0, 5, 0, 93, 0, 0
            , 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 156, 40
            , 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 1
            , 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 114, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0
            , 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 114, 0, 16
            , 0, 0, 0, 0, 0, 70, 2, 2, 0, 70, 130, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0
            , 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0
            , 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0, 0
            , 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0
            , 1, 21, 0, 0, 1, 38, 0, 0, 8, 0, 208, 0, 0, 18, 0, 16, 0, 0, 0, 0, 0, 42, 0
            , 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 8, 34, 0, 16, 0, 0
            , 0, 0, 0, 26, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 2, 0
            , 35, 0, 0, 10, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 26, 128, 32
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 163, 0, 0, 136, 66, 1
            , 0, 128, 67, 85, 21, 0, 34, 0, 16, 0, 0, 0, 0, 0, 70, 10, 2, 0, 22, 238, 17, 0, 0
            , 0, 0, 0, 168, 0, 0, 9, 18, 224, 17, 0, 1, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0
            , 1, 64, 0, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84, 65
            , 84, 148, 0, 0, 0, 12, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
            , 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
#pragma kernel CSMain

RWStructuredBuffer<float> Input : register(u0);
RWStructuredBuffer<float> Output : register(u1);

cbuffer Info : register(b0)
{
    int length;
    
    int dummy1;
    int dummy2;
    int dummy3;
}

[numthreads(16, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= length)
    {
        return;
    }
    
    float val = Input[id.x];
    Output[id.x] = val * val;
}
*/
        public static byte[] L2Norm1 = new byte[]
        {
68, 88, 66, 67, 36, 148, 21, 162, 228, 73, 119, 173, 180, 3, 124, 76, 115, 125, 212, 40, 1, 0, 0, 0
            , 128, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 200, 2, 0, 0, 216, 2, 0, 0, 232, 2, 0
            , 0, 228, 3, 0, 0, 82, 68, 69, 70, 140, 2, 0, 0, 3, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 100, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 248, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 1, 0, 0, 0, 224, 1, 0, 0, 4, 0, 0, 0, 0
            , 0, 0, 0, 3, 0, 0, 0, 162, 0, 0, 0, 1, 0, 0, 0, 60, 2, 0, 0, 4, 0, 0, 0
            , 0, 0, 0, 0, 3, 0, 0, 0, 152, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0
            , 0, 164, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0
            , 0, 0, 200, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0
            , 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 207, 1, 0, 0
            , 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 214, 1, 0, 0, 12, 0, 0, 0, 4, 0
            , 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255
            , 255, 255, 255, 0, 0, 0, 0, 108, 101, 110, 103, 116, 104, 0, 105, 110, 116, 0, 171, 0, 0, 2, 0
            , 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 159, 1, 0, 0, 100, 117, 109, 109, 121, 49, 0, 100, 117, 109, 109, 121, 50, 0
            , 100, 117, 109, 109, 121, 51, 0, 171, 171, 171, 8, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 24, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0, 171, 0, 0, 3
            , 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 17, 2, 0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2
            , 0, 0, 0, 24, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76, 32
            , 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73, 83
            , 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0, 0
            , 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 244, 0, 0, 0, 80, 0, 5, 0, 61, 0, 0, 0
            , 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 158, 0, 0
            , 4, 0, 224, 17, 0, 0, 0, 0, 0, 4, 0, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 1, 0
            , 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 18, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0, 155
            , 0, 0, 4, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 18, 0, 16, 0
            , 0, 0, 0, 0, 10, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 4
            , 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 21, 0, 0, 1, 167, 0, 0, 138, 2, 35
            , 0, 128, 131, 153, 25, 0, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0
            , 0, 0, 0, 6, 224, 17, 0, 0, 0, 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0
            , 10, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 168, 0, 0, 8, 18, 224, 17
            , 0, 1, 0, 0, 0, 10, 0, 2, 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0
            , 0, 0, 62, 0, 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0
            , 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0
            , 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, };
        /*
        #pragma kernel CSMain

        RWTexture2D<float> Input : register(u0);
        RWStructuredBuffer<float> Output : register(u1);

        cbuffer Info : register(b0)
        {
            int width;
            int height;

            int dummy1;
            int dummy2;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= width || id.y >= height)
            {
                return;
            }

            float val = Input[id.xy];
            Output[id.x + id.y * width] = val * val;
        }
        */
        public static byte[] L2Norm2 = new byte[]
        {
68, 88, 66, 67, 113, 121, 174, 7, 159, 88, 189, 106, 3, 10, 217, 72, 9, 167, 19, 105, 1, 0, 0, 0
            , 120, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 136, 2, 0, 0, 152, 2, 0, 0, 168, 2, 0
            , 0, 220, 3, 0, 0, 82, 68, 69, 70, 76, 2, 0, 0, 2, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 36, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 224, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 1, 0, 0, 0, 200, 1, 0, 0, 4, 0, 0, 0, 0
            , 0, 0, 0, 3, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0
            , 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 176, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 140, 1, 0, 0, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 183, 1, 0, 0, 8
            , 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 190, 1, 0, 0, 12, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255
            , 255, 255, 0, 0, 0, 0, 119, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0, 2, 0, 1
            , 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 134, 1, 0, 0, 104, 101, 105, 103, 104, 116, 0, 100, 117, 109, 109, 121, 49, 0, 100
            , 117, 109, 109, 121, 50, 0, 171, 171, 171, 240, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0
            , 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0
            , 0, 0, 0, 36, 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0, 171, 0, 0, 3, 0
            , 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 249, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32
            , 72, 76, 83, 76, 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48
            , 46, 49, 0, 73, 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78
            , 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 44, 1, 0, 0, 80, 0, 5
            , 0, 75, 0, 0, 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0
            , 0, 0, 156, 24, 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 158, 0, 0, 4, 0
            , 224, 17, 0, 1, 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 50, 0, 2, 0, 104, 0, 0, 2
            , 1, 0, 0, 0, 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0
            , 7, 50, 0, 16, 0, 0, 0, 0, 0, 70, 0, 2, 0, 70, 128, 32, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10
            , 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1
            , 21, 0, 0, 1, 163, 0, 0, 136, 194, 0, 0, 128, 67, 85, 21, 0, 18, 0, 16, 0, 0, 0, 0
            , 0, 70, 5, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 35, 0, 0, 8, 34, 0, 16, 0, 0, 0
            , 0, 0, 26, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 2, 0, 56
            , 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0
            , 0, 0, 0, 0, 168, 0, 0, 9, 18, 224, 17, 0, 1, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0
            , 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0, 1, 83, 84
            , 65, 84, 148, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1
            , 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
        /*
        #pragma kernel CSMain

        RWTexture3D<float> Input : register(u0);
        RWStructuredBuffer<float> Output : register(u1);

        cbuffer Info : register(b0)
        {
            int width;
            int height;
            int depth;

            int dummy1;
        }

        [numthreads(8, 8, 1)]
        void CSMain(uint3 id : SV_DispatchThreadID)
        {
            if (id.x >= width || id.y >= height || id.z >= depth)
            {
                return;
            }

            float val = Input[id];
            Output[id.x + id.y * width + id.z * width * height] = val * val;
        }
        */
        public static byte[] L2Norm3 = new byte[]
        {
68, 88, 66, 67, 80, 27, 76, 225, 228, 244, 89, 251, 221, 7, 79, 253, 208, 195, 114, 221, 1, 0, 0, 0
            , 216, 4, 0, 0, 5, 0, 0, 0, 52, 0, 0, 0, 132, 2, 0, 0, 148, 2, 0, 0, 164, 2, 0
            , 0, 60, 4, 0, 0, 82, 68, 69, 70, 72, 2, 0, 0, 2, 0, 0, 0, 176, 0, 0, 0, 3, 0
            , 0, 0, 60, 0, 0, 0, 0, 5, 83, 67, 0, 1, 0, 0, 32, 2, 0, 0, 82, 68, 49, 49, 60
            , 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 36, 0, 0, 0, 12, 0, 0, 0
            , 0, 0, 0, 0, 156, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 255, 255, 255
            , 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 162, 0, 0, 0, 6, 0, 0, 0, 6, 0
            , 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 169
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 1, 0, 0, 0, 1, 0, 0, 0, 73, 110, 112, 117, 116, 0, 79, 117, 116, 112, 117, 116, 0, 73, 110
            , 102, 111, 0, 171, 171, 169, 0, 0, 0, 4, 0, 0, 0, 224, 0, 0, 0, 16, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 1, 0, 0, 0, 196, 1, 0, 0, 4, 0, 0, 0, 0
            , 0, 0, 0, 3, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0
            , 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0
            , 0, 176, 1, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 140, 1, 0, 0, 0, 0
            , 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 183, 1, 0, 0, 8
            , 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255
            , 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 189, 1, 0, 0, 12, 0, 0, 0, 4, 0, 0
            , 0, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255
            , 255, 255, 0, 0, 0, 0, 119, 105, 100, 116, 104, 0, 105, 110, 116, 0, 171, 171, 0, 0, 2, 0, 1
            , 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 134, 1, 0, 0, 104, 101, 105, 103, 104, 116, 0, 100, 101, 112, 116, 104, 0, 100, 117
            , 109, 109, 121, 49, 0, 236, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 252, 1
            , 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 36
            , 69, 108, 101, 109, 101, 110, 116, 0, 102, 108, 111, 97, 116, 0, 171, 0, 0, 3, 0, 1, 0, 1, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 245, 1, 0, 0, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 40, 82, 41, 32, 72, 76, 83, 76
            , 32, 83, 104, 97, 100, 101, 114, 32, 67, 111, 109, 112, 105, 108, 101, 114, 32, 49, 48, 46, 49, 0, 73
            , 83, 71, 78, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 79, 83, 71, 78, 8, 0, 0, 0
            , 0, 0, 0, 0, 8, 0, 0, 0, 83, 72, 69, 88, 144, 1, 0, 0, 80, 0, 5, 0, 100, 0, 0
            , 0, 106, 8, 0, 1, 89, 0, 0, 4, 70, 142, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 156, 40
            , 0, 4, 0, 224, 17, 0, 0, 0, 0, 0, 85, 85, 0, 0, 158, 0, 0, 4, 0, 224, 17, 0, 1
            , 0, 0, 0, 4, 0, 0, 0, 95, 0, 0, 2, 114, 0, 2, 0, 104, 0, 0, 2, 1, 0, 0, 0
            , 155, 0, 0, 4, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 7, 114, 0, 16
            , 0, 0, 0, 0, 0, 70, 2, 2, 0, 70, 130, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0
            , 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 26, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0
            , 0, 0, 0, 60, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0, 0, 0, 0
            , 10, 0, 16, 0, 0, 0, 0, 0, 31, 0, 4, 3, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0, 0
            , 1, 21, 0, 0, 1, 163, 0, 0, 136, 66, 1, 0, 128, 67, 85, 21, 0, 18, 0, 16, 0, 0, 0
            , 0, 0, 70, 10, 2, 0, 70, 238, 17, 0, 0, 0, 0, 0, 38, 0, 0, 8, 0, 208, 0, 0, 34
            , 0, 16, 0, 0, 0, 0, 0, 42, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 35, 0, 0, 8, 66, 0, 16, 0, 0, 0, 0, 0, 26, 0, 2, 0, 10, 128, 32, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 10, 0, 2, 0, 35, 0, 0, 10, 34, 0, 16, 0, 0, 0, 0, 0, 26, 0
            , 16, 0, 0, 0, 0, 0, 26, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 16, 0, 0
            , 0, 0, 0, 56, 0, 0, 7, 18, 0, 16, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0
            , 10, 0, 16, 0, 0, 0, 0, 0, 168, 0, 0, 9, 18, 224, 17, 0, 1, 0, 0, 0, 26, 0, 16
            , 0, 0, 0, 0, 0, 1, 64, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 62, 0
            , 0, 1, 83, 84, 65, 84, 148, 0, 0, 0, 13, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1
            , 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, };
    }
}
